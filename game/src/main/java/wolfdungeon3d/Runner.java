/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package wolfdungeon3d;

import com.jogamp.newt.opengl.GLWindow;

import processing.core.PApplet;
import processing.core.PGraphics;
import processing.core.PVector;
import wolfdungeon3d.Game.GameState;

public class Runner extends PApplet {
	static private final PVector MAIN_CTX_PERCENT = new PVector(1f, 0.8f);
	static private final PVector MAIN_CTX_POS = new PVector(0, 0);

	PGraphics mainGraphicsCtx;
	Game game;
	RunnerState state = RunnerState.GAME;

	static enum RunnerState {
		MENU, GAME
	}

	public void setup() {
		frameRate(60);
		mainGraphicsCtx = createGraphics((int) ((float) width * MAIN_CTX_PERCENT.x),
				(int) ((float) height * MAIN_CTX_PERCENT.y), PApplet.P2D);

	}

	public void settings() {
		size(1920, 1080, PApplet.P3D);
		fullScreen();
	}

	public void draw() {
		update();
		mainGraphicsCtx.beginDraw();
		if (state == RunnerState.GAME && game != null) {
			game.draw(mainGraphicsCtx);
		}
		mainGraphicsCtx.endDraw();
		image(mainGraphicsCtx, MAIN_CTX_POS.x, MAIN_CTX_POS.y);
	}

	public void update() {
		if (state == RunnerState.GAME && game == null) {
			game = new Game(this);
		} else if (state == RunnerState.GAME && game != null) {
			game.update();
		}
		if (state == RunnerState.GAME && game != null && game.getState() == GameState.EXPLORE) {
			((GLWindow) surface.getNative()).warpPointer(width / 2, height / 2);
			((GLWindow) surface.getNative()).confinePointer(false);
			((GLWindow) surface.getNative()).setPointerVisible(true);
		}
	}

	public static void main(String[] args) {
		PApplet.main(new String[] { "wolfdungeon3d.Runner" });
	}
}
